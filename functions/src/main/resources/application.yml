server:
  port: 5000

spring:
  application:
    name: UdineTour

logging:
  file:
    name: 'logs/udine.log'
    #  level:
    #org.springframework.security: debug
    #org.springframework.web: debug
    ## Log dos requests HTTP (interfaces REST):
    #org.springframework.web.filter.CommonsRequestLoggingFilter: debug

  logback:
    rollingpolicy:
      max-history: 60
      max-file-size: 10MB

udine:
  google:
    places:
      connection-attempts: ${GOOGLE_PLACES_CONNECTION_ATTEMPTS:3}
      url: ${GOOGLE_PLACES_URL:https://places.googleapis.com/v1}
      search-nearby-path: ${GOOGLE_PLACES_SEARCH_NEARBY_PATH:/places:searchNearby}
      search-text-path: ${GOOGLE_PLACES_SEARCH_TEXT_PATH:/places:searchText}
      apiKey: ${GOOGLE_PLACES_API_KEY}
      radius: ${GOOGLE_PLACES_RADIUS:2000}
      max-results: ${GOOGLE_PLACES_MAX_RESULTS:50}
      default-types:
        - tourist_attraction
        - restaurant
        - hotel
      types:
        - tourist_attraction
        - restaurant
        - hotel
      media:
        max-width: ${GOOGLE_PLACES_MEDIA_MAX_WIDTH:400}
        max-height: ${GOOGLE_PLACES_MEDIA_MAX_HEIGHT:400}
      fields-mask:
        - places.id
        - places.types
        - places.displayName
        - places.nationalPhoneNumber
        - places.shortFormattedAddress
        - places.location
        - places.rating
        - places.regularOpeningHours
        - places.currentOpeningHours
        - places.photos

  geocode:
    url: ${GEOCODE_URL:https://maps.googleapis.com/maps/api/geocode/json}
    api-key: ${GEOCODE_API_KEY}

  text-to-speech:
    base-uri: ${TEXT_TO_SPEECH_BASE_URI:https://texttospeech.googleapis.com}
    path: ${TEXT_TO_SPEECH_PATH:/v1beta1/text:synthesize}
    apiKey: ${TEXT_TO_SPEECH_API_KEY}

  speech-to-text:
    base-uri: ${SPEECH_TO_TEXT_BASE_URI:https://speech.googleapis.com}
    path: ${SPEECH_TO_TEXT_PATH:/v1/speech:recognize}
    apiKey: ${SPEECH_TO_TEXT_API_KEY}

  openai:
    url: ${OPEN_AI_URL:https://api.openai.com}
    path: ${OPEN_AI_PATH:/v1/chat/completions}
    api-key: ${OPEN_AI_API_KEY}
    model: ${OPEN_AI_MODEL:gpt-4o-mini}
    max-tokens: ${OPEN_AI_MAX_TOKENS:1000}
    temperature: ${OPEN_AI_TEMPERATURE:0.7}
    create-fake-text: ${OPEN_AI_CREATE_FAKE_TEXT:false}
    fake-text: ${OPEN_AI_FAKE_TEXT:Olá, sou o UdineTour. Este é um texto gerado automaticamente para reduzir o custo da integração com a OpenAI}

  wikipedia:
    url: ${WIKIPEDIA_URL:https://pt.wikipedia.org/w/api.php}
    action: ${WIKIPEDIA_ACTION:query}
    format: ${WIKIPEDIA_FORMAT:json}
    prop: ${WIKIPEDIA_PROP:extracts}
    explaintext: ${WIKIPEDIA_EXPLAINTEXT:""}
    text-length:  ${WIKIPEDIA_TEXT_LENGTH:500}
