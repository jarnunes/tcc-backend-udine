
## Questions
question.service.name=Question Service
question.empty.llm.response=Nenhuma resposta obtida do LLM. Refa\u00E7a sua pergunta e tenta novamente.
question.error.llm.response=Erro ao processar a resposta do LLM. Refa\u00E7a sua pergunta e tenta novamente.
questions.locations.prompt.audio=Voc\u00EA receber\u00E1 um determinado local ou uma lista de locais pr\u00F3ximos de um usu\u00E1rio (em formato JSON),  obtidos a partir da API do google maps. \
  Al\u00E9m disso, tamb\u00E9m receber\u00E1 uma pergunta e sua tarefa \u00E9 gerar uma resposta objetiva e factual com base nos pontos tur\u00EDsticos recebidos ou seu \
  conhecimento geral sobre o(s) local(is) recebido(s). \
  #### RESTRI\u00C7\u00D5ES: \
  1. Se for enviada uma pergunta inv\u00E1lida, voc\u00EA deve responder: "Desculpe, mas sua pergunta n\u00E3o est\u00E1 clara. Por favor, forne\u00E7a mais detalhes ou fa\u00E7a uma nova pergunta. \
  2. Se JSON estiver nulo: responder a pergunta com base no conhecimento do pr\u00F3prio chat GPT. \
  3. Se no JSON o campo "name" n\u00E3o rela\u00E7\u00E3o com o campo "wikipediaDescription", pode desconsiderar a descri\u00E7\u00E3o do "wikipediaDescription", pois ela \u00E9 inv\u00E1lida. \
  4. Se o campo "wikipediaDescription" for inv\u00E1lido ou nulo, voc\u00EA dever\u00E1 gerar uma resposta considerando apenas o conhecimento do pr\u00F3prio chat GPT sobre o(s) local(is). \
  5. Se receber pergunta solicitando indica\u00E7\u00F5es de locais para visitar, lanchar ou dormir, avaliar o campo "locationTypes" no JSON e indicar um local da lista que tenha rela\u00E7\u00E3o com a pergunta considerando o de maior classifica\u00E7\u00E3o. \
  6. Ao indicar um local, criar um texto de f\u00E1cil leitura para envolver o usu\u00E1rio, contendo: nome do local, endere\u00E7o, avalia\u00E7\u00E3o e hor\u00E1rio de funcionamento. \
  7. Se n\u00E3o for encontrado ponto tur\u00EDstico relacionado \u00E0 quest\u00E3o, reponser: Desculpe, mas pr\u00F3ximo a voc\u00EA n\u00E3o h\u00E1 nenhum local relacionado \
  8. Entre cada cada item (nome do local, endere\u00E7o, avalia\u00E7\u00E3o e hor\u00E1rio de funcionamento) sempre deixar uma linha em branco para indicar ao speech-to-text uma pausa na leitura.\
  9. Ajuste as frases para que a transcri\u00E7\u00E3o delas para audio fique o mais natural poss\u00EDvel e respeitando as pontua\u00E7\u00F5es necess\u00E1rias. \
  10. A resposta dever\u00E1 ser retornada em um JSON com a seguinte estrutura: {0} \
  11. No JSON da resposta, preencher o campo "idLocation" com o valor do campo "id" no JSON recebido. Somente preencher esse campo caso sua resposta seja referente a um local espec\u00EDfico. \
  12. N\u00E3o inclua formata\u00E7\u00E3o adicional como ```json``` ou ``` em torno do JSON gerado. Apenas retorne o JSON puro. \
  #### JSON COM INFORMA\u00C7\u00D5ES GERAIS: {1} \
  #### PERGUNTA: {2}

questions.locations.prompt.text=Voc\u00EA receber\u00E1 um determinado local ou uma lista de locais pr\u00F3ximos de um usu\u00E1rio (em formato JSON),  obtidos a partir da API do google maps. \
  Al\u00E9m disso, tamb\u00E9m receber\u00E1 uma pergunta e sua tarefa \u00E9 gerar uma resposta objetiva e factual com base nos pontos tur\u00EDsticos recebidos ou seu \
  conhecimento geral sobre o(s) local(is) recebido(s). \
  #### RESTRI\u00C7\u00D5ES: \
  1. Se for enviada uma pergunta inv\u00E1lida, voc\u00EA deve responder: "Desculpe, mas sua pergunta n\u00E3o est\u00E1 clara. Por favor, forne\u00E7a mais detalhes ou fa\u00E7a uma nova pergunta. \
  2. Se JSON estiver nulo: responder a pergunta com base no conhecimento do pr\u00F3prio chat GPT. \
  3. Se no JSON o campo "name" n\u00E3o rela\u00E7\u00E3o com o campo "wikipediaDescription", pode desconsiderar a descri\u00E7\u00E3o do "wikipediaDescription", pois ela \u00E9 inv\u00E1lida. \
  4. Se o campo "wikipediaDescription" for inv\u00E1lido ou nulo, voc\u00EA dever\u00E1 gerar uma resposta considerando apenas o conhecimento do pr\u00F3prio chat GPT sobre o(s) local(is). \
  5. Se receber pergunta solicitando indica\u00E7\u00F5es de locais para visitar, lanchar ou dormir, avaliar o campo "locationTypes" no JSON e indicar um local da lista que tenha rela\u00E7\u00E3o com a pergunta considerando o de maior classifica\u00E7\u00E3o. \
  6. Ao indicar um local, criar um texto de f\u00E1cil leitura para envolver o usu\u00E1rio, contendo: nome do local, endere\u00E7o, avalia\u00E7\u00E3o e hor\u00E1rio de funcionamento. \
  7. Se n\u00E3o for encontrado ponto tur\u00EDstico relacionado \u00E0 quest\u00E3o, reponser: Desculpe, mas pr\u00F3ximo a voc\u00EA n\u00E3o h\u00E1 nenhum local relacionado \
  8. Formatar o texto de resposta para proporcionar uma leitura agrad\u00E1vel. \
  9. A resposta derevar ser retornada dentro de um JSON com a seguinte estrutura: {0} \
  10. No JSON da resposta, preencher o campo "idLocation" com o valor do campo "id" no JSON recebido. Somente preencher esse campo caso sua resposta seja referente a um local espec\u00EDfico. \
  11. N\u00E3o inclua formata\u00E7\u00E3o adicional como ```json``` ou ``` em torno do JSON gerado. Apenas retorne o JSON puro. \
  #### JSON COM INFORMA\u00C7\u00D5ES GERAIS: {1} \
  #### PERGUNTA: {2}

questions.identify.question.type=Voc\u00EA receber\u00E1 uma pergunta, e sua tarefa \u00E9 determinar a qual categoria entre as op\u00E7\u00F5es listadas abaixo essa pergunta est\u00E1 relacionada. \
  #### Responda apenas com uma das seguintes palavras: restaurant, hotel, tourist_attraction ou empty \
  CONDI\u00C7\u00D5ES: \
  1. restaurant: Se a pergunta estiver relacionada a comida, pizza, hamb\u00FArguer, almo\u00E7o, jantar, bebida, lanche, comer, beber ou qualquer coisa que remeta a restaurantes ou lanchonetes. \
  2. hotel: Se a pergunta estiver relacionada a acomoda\u00E7\u00E3o, hospedagem, hot\u00E9is, hotelaria, dormir, cansa\u00E7o ou qualquer coisa que remeta a esse tema. \
  3. tourist_attraction: Se a pergunta estiver relacionada a cultura, hist\u00F3ria, turismo, pontos tur\u00EDsticos ou atra\u00E7\u00F5es tur\u00EDsticas. \
  4. empty: Se a pergunta for gen\u00E9rica ou n\u00E3o estiver relacionada a nenhuma das categorias acima. \
  #### PERGUNTA: {0}

questions.identify.question.type2=Voc\u00EA receber\u00E1 um ARRAY de locais pr\u00F3ximos do usu\u00E1rio obtidos do Google Maps, al\u00E9m de uma 'Pergunta'. Sua tarefa \u00E9 determinar \
  se a pergunta tem rela\u00E7\u00E3o com algum(s) do(s) ponto(s) tur\u00EDsticos da lista. \
  #### RESTRI\u00C7\u00D5ES: \
  1. A resposta deve ser um Array com o identificador dos pontos tur\u00EDsticos relacionados \u00E0 pergunta. \
  2. Se a pergunta n\u00E3o tiver rela\u00E7\u00E3o com os pontos tur\u00EDsticos, retorne um Array vazio. Exemplo: [] \
  3. Se a pergunta tive rela\u00E7\u00E3o com todos os pontos tur\u00EDsticos ou for uma pergunta gen\u00E9rica que n\u00E3o especifique o nome dos pontos tur\u00EDsticos, retorne um array com todos os pontos tur\u00EDsticos. \
  #### PONTOS TURISTICOS: {0} \
  #### PERGUNTA: {1}

questions.identify.locations.type.based.on.question=Voc\u00EA receber\u00E1 um ARRAY de tipos de locais do Google Maps, al\u00E9m de uma 'Pergunta'. Sua tarefa \u00E9 determinar \
  a quais tipos dos locais a pergunta est\u00E1 relacionada e retornar um array como resposta. \
  #### RESTRI\u00C7\u00D5ES: \
  1. A resposta deve ser um Array com o identificador dos tipos relacionados \u00E0 pergunta. \
  2. Se a pergunta n\u00E3o tiver rela\u00E7\u00E3o com os tipos, retorne um Array vazio. Exemplo: [] \
  3. Se n\u00E3o for poss\u00EDvel deduzir os tipos com base na pergunta, retornar o array com todos os tipos recebidos.
  #### EXEMPLO: \
  1. Pergunta Recebida: Qual o melhor local para comer uma pizza com a fam\u00EDlia? \
  2. Array Recebido: ["restaurant", "museum", "food", "lodging", "bar"] \
  3. Array de resposta: ["restaurant", "food"] \
  #### ARRAY: {0} \
  #### PERGUNTA: {1}

questions.nearby.location.not.found=N\u00E3o foi poss\u00EDvel encontrar um local pr\u00F3ximo a voc\u00EA relacionado a pergunta enviada. Tente novamente.
questions.interpretable.question=N\u00E3o foi poss\u00EDvel interpretar a pergunta enviada. Refa\u00E7a a pergunta e tente novamente.
questions.error.converts.openai.response.to.list=Erro ao converter resposta do openai para lista de strings

## Open AI
openai.service.name=OpenAI Service
openai.google.maps.decision.prompt=Voc\u00EA ser\u00E1 respons\u00E1vel por classificar perguntas feitas pelos usu\u00E1rios em categorias espec\u00EDficas para determinar como fazer buscas na API do Google Maps. Sua resposta deve atender \u00E0s seguintes regras: \
#### Regras Gerais: \
1. Determine o tipo da pergunta e retorne uma palavra-chave correspondente ao tipo de local: \
1.1 Se for sobre restaurantes (ou locais relacionados a comida): Retorne restaurant. \
1.2 Se for sobre pontos tur\u00EDsticos, atra\u00E7\u00E3o tur\u00EDstica ou algo relacionado a isso: Retorne tourist_attraction. \
1.3 Se for sobre hot\u00E9is (ou hospedagem): Retorne hotel. \
1.4 Se n\u00E3o for relacionado a nenhum dos acima (ex.: hospitais, farm\u00E1cias): Retorne empty. \
2. Determine qual API usar: \
2.1 Se a pergunta contiver uma palavra-chave espec\u00EDfica como "restaurante italiano", "museu de arte", ou qualquer descri\u00E7\u00E3o detalhada do local, use searchText. \
2.2 Caso contr\u00E1rio, use searchNearby. \
3. Determine como classificar os resultados: \
3.1 Se a pergunta mencionar explicitamente "mais pr\u00F3ximos", "perto de mim", ou termos relacionados \u00E0 proximidade, defina a classifica\u00E7\u00E3o como distance. \
3.2 Caso contr\u00E1rio, defina a classifica\u00E7\u00E3o como popularity. \
4. Extra\u00E7\u00E3o de Palavras-Chave: \
4.1 Se a API escolhida for searchText, extraia as palavras-chave principais da pergunta e inclua-as no atributo textQuery no formato de string. \
5. Defina o valor do atributo `showPhotos`: \
5.1 Se a pergunta indicar que o objetivo \u00E9 apresentar ou descrever um local (ex.: "Qual o melhor local para comer uma pizza?", "Quais s\u00E3o os melhores restaurantes para um jantar especial?"), defina `showPhotos` como **true**. \
5.2 Se a pergunta indicar que o usu\u00E1rio busca informa\u00E7\u00F5es espec\u00EDficas como endere\u00E7o, hor\u00E1rio de funcionamento, ou outros detalhes pr\u00E1ticos (ex.: "Qual o endere\u00E7o do restaurante X?", "Quais os hor\u00E1rios de funcionamento?"), defina `showPhotos` como **false**. \
#### Formato de Resposta: \
1. Retorne apenas o JSON, sem qualquer texto adicional antes ou depois dele. \
2. N\u00E3o inclua formata\u00E7\u00E3o como ```json ou qualquer outro marcador ao redor do JSON. \
3. Certifique-se de que o JSON seja bem formatado e v\u00E1lido. \
Responda no seguinte formato JSON: \
"'{  "api": "searchNearby" ou "searchText",   "classification": "distance" ou "popularity",   "locationType": "restaurant" ou "hotel" ou "tourist_attraction" ou "empty",  "textQuery": "palavras chave" (se a API for searchText) ou n\u00E3o criar esse atributo,  "showPhotos": true ou false }'" \
#### Exemplos de Perguntas e Respostas: \
1. Pergunta: "Quais s\u00E3o os restaurantes italianos mais pr\u00F3ximos?" \
Resposta: \
"'{  "api": "searchText",  "classification": "distance",  "locationType": "restaurant",  "textQuery": "restaurantes italianos",  "showPhotos": true }'" \
2. Pergunta: "Quais hot\u00E9is est\u00E3o perto de mim?" \
Resposta: \
"'{  "api": "searchNearby",  "classification": "distance",  "locationType": "hotel",  "showPhotos": true }'" \
3. Pergunta: "Quais s\u00E3o os pontos tur\u00EDsticos mais populares?" \
Resposta: \
"'{  "api": "searchNearby",  "classification": "popularity",  "locationType": "tourist_attraction",  "showPhotos": true }'" \
4. Pergunta: "Qual o endere\u00E7o do Restaurante X?" \
Resposta: \
"'{  "api": "searchNearby",  "classification": "distance",  "locationType": "restaurant",  "showPhotos": false }'" \
5. Pergunta: "Onde encontro sushi perto de mim?" \
Resposta: \
"'{  "api": "searchText",  "classification": "distance",  "locationType": "restaurant",  "textQuery": "sushi",  "showPhotos": true }'" \
6. Perguntas como "Onde ir com a namorada", "Onde fazer um passeio com os amigos", "Onde levar a fam\u00EDlia" ou algo que remeta a isso: \
Resposta: \
"'{  "api": "searchNearby",  "classification": "popularity",  "locationType": "tourist_attraction",  "showPhotos": true }'" \
7. Perguntas como "Onde ir jantar com a namorada", "Onde levar os amigos para comer algo", "Onde levar os pais para tomar um caf\u00E9" ou algo que remeta a isso: \
Resposta: \
"'{  "api": "searchNearby",  "classification": "popularity",  "locationType": "restaurant",  "showPhotos": true }'" \
Agora analise a pergunta fornecida e responda no formato JSON acima, atendendo a todas as regras. \
#### PERGUNTA: {0}

openai.generate.response.for.restaurant=Voc\u00EA ser\u00E1 respons\u00E1vel por analisar perguntas feitas pelos usu\u00E1rios sobre restaurantes e processar uma lista de locais fornecida para gerar uma resposta amig\u00E1vel e informativa. Sua resposta deve atender \u00E0s seguintes regras: \
#### Estrutura da Resposta: \
Sempre retorne a resposta no seguinte formato JSON: \
"'{ "answer": "Resposta gerada com base na pergunta e na lista recebida", "idLocations": ["id1", "id2", "id3"] }'" \
#### Regras para Processar a Pergunta e os Locais: \
1. Se a pergunta incluir termos como 'melhor restaurante pr\u00F3ximo' ou 'onde jantar perto de mim': \
1.1 Considere avalia\u00E7\u00E3o e dist\u00E2ncia na classifica\u00E7\u00E3o dos restaurantes. \
1.2 Retorne apenas um restaurante (o melhor classificado). \
1.3 A resposta deve ser amig\u00E1vel e descrever o restaurante escolhido, incluindo: \
1.3.1 Nome do local. \
1.3.2 Endere\u00E7o. \
1.3.3 Hor\u00E1rio de funcionamento. \
1.3.4 Avalia\u00E7\u00E3o no Google. \
1.3.5 Dist\u00E2ncia aproximada do usu\u00E1rio. \
Exemplo de JSON: \
"'{ "answer": "O melhor restaurante para jantar perto de voc\u00EA \u00E9 'Nome do Restaurante', localizado em 'Endere\u00E7o'. Ele tem uma excelente avalia\u00E7\u00E3o de 4.8 no Google e fica a aproximadamente 500 metros de dist\u00E2ncia. Est\u00E1 aberto agora e pronto para receb\u00EA-lo!", "idLocations": ["id1"]}'" \
2. Se a pergunta incluir termos como 'quais os melhores restaurantes pr\u00F3ximos' ou 'melhores op\u00E7\u00F5es para jantar perto de mim': \
2.1 Classifique os restaurantes por avalia\u00E7\u00E3o e dist\u00E2ncia. \
2.2 Retorne no m\u00E1ximo 3 restaurantes (se houver menos, retorne todos). \
2.3 A resposta deve listar os restaurantes escolhidos com descri\u00E7\u00F5es amig\u00E1veis e formatadas. \
2.3.1 Destaque o nome dos restaurantes (em negrito). \
2.3.2 Separe cada restaurante com uma linha em branco para melhorar a legibilidade. \
2.4 Exemplo de JSON: \
"'{ "answer": "Aqui est\u00E3o as melhores op\u00E7\u00F5es para jantar perto de voc\u00EA:  \n\n1. **Restaurante A** com avalia\u00E7\u00E3o 4.7, localizado a aproximadamente 300 metros.  \n\n2. **Restaurante B** com avalia\u00E7\u00E3o 4.5, a aproximadamente 500 metros.  \n\n3. **Restaurante C** com avalia\u00E7\u00E3o 4.3, a aproximadamente 800 metros.", "idLocations": ["id1", "id2", "id3"]}'" \
3. Se a pergunta incluir termos como 'melhores restaurantes para jantar' (sem refer\u00EAncia \u00E0 proximidade): \
3.1 Classifique os restaurantes apenas pela avalia\u00E7\u00E3o. \
3.2 Retorne no m\u00E1ximo 3 restaurantes (se houver menos, retorne todos). \
3.3 A resposta deve listar os restaurantes escolhidos com descri\u00E7\u00F5es amig\u00E1veis. \
3.4 Adicione uma linha em branco entre cada restaurante listado para melhorar a legibilidade. \
3.5 Exemplo de JSON \
"'{ "answer": "Aqui est\u00E3o os melhores restaurantes para jantar:  \n\n1. **Restaurante A** com avalia\u00E7\u00E3o 4.8.  \n\n2. **Restaurante B** com avalia\u00E7\u00E3o 4.7.  \n\n3. **Restaurante C** com avalia\u00E7\u00E3o 4.5.", "idLocations": ["id1", "id2", "id3"]}'" \
4. Se a pergunta for espec\u00EDfica, como 'qual o endere\u00E7o de [restaurante]?' ou 'qual o hor\u00E1rio de funcionamento de [restaurante]?': \
4.1 Identifique o restaurante na lista pelo nome. \
4.2 Responda apenas com a informa\u00E7\u00E3o solicitada, sem adicionar detalhes adicionais. \
4.3 Formato de Resposta JSON: \
"'{ "answer": "Resposta direta, como o endere\u00E7o ou o hor\u00E1rio de funcionamento solicitado", "idLocations": ["id"]}'" \
Exemplo 1: \
Pergunta: "Qual o endere\u00E7o do Restaurante A?" \
Resposta: "'{ "answer": "O endere\u00E7o do Restaurante A \u00E9 'Rua 1'.", "idLocations": ["id1"]}'" \
Exemplo 2: \
Pergunta: "Qual o hor\u00E1rio de funcionamento do Restaurante A?" \
Resposta: "'{ "answer": "O hor\u00E1rio de funcionamento do Restaurante A \u00E9 das 18:00 \u00E0s 23:00.", "idLocations": ["id1"]}'" \
5. Se nenhuma correspond\u00EAncia clara for encontrada na lista ou a pergunta for inv\u00E1lida: \
5.1 Retorne uma mensagem gen\u00E9rica amig\u00E1vel, sem IDs no JSON. \
5.2 Exemplo de JSON \
"'{ "answer": "Desculpe, n\u00E3o consegui encontrar informa\u00E7\u00F5es sobre restaurantes com base na sua pergunta. Por favor, forne\u00E7a mais detalhes.", "idLocations": []}'" \
#### Regras para Processar a Lista de Locais: \
Cada local na lista fornecida ter\u00E1 as seguintes informa\u00E7\u00F5es: \
1. id: Identificador \u00FAnico do local. \
2. name: Nome do restaurante. \
3. address: Endere\u00E7o. \
4. rating: Avalia\u00E7\u00E3o no Google (ex.: 4.5). \
5. distance: Dist\u00E2ncia em metros do usu\u00E1rio. \
6. opening_hours: Hor\u00E1rio de funcionamento. \
Use essas informa\u00E7\u00F5es para gerar respostas que sejam claras e envolventes, sempre considerando as regras descritas. \
#### Formato de Resposta: \
1. Retorne apenas o JSON, sem qualquer texto adicional antes ou depois dele. \
2. N\u00E3o inclua formata\u00E7\u00E3o como ```json ou qualquer outro marcador ao redor do JSON. \
3. Certifique-se de que o JSON seja bem formatado e v\u00E1lido. \
#### Exemplo de entrada e sa\u00EDda: \
1. Pergunta: "Qual o melhor restaurante pr\u00F3ximo para um jantar?" \
1.1 Lista de Entradas: \
"[ '{"id": "id1", "name": "Restaurante A", "address": "Rua 1", "rating": 4.8, "distance": 500, "opening_hours": "18:00 - 23:00"}', '{"id": "id2", "name": "Restaurante B", "address": "Rua 2", "rating": 4.5, "distance": 300, "opening_hours": "18:00 - 22:00"}', '{"id": "id3", "name": "Restaurante C", "address": "Rua 3", "rating": 4.3, "distance": 700, "opening_hours": "17:00 - 23:00"}']" \
1.2 Resposta: \
"'{ "answer": "O melhor restaurante para jantar perto de voc\u00EA \u00E9 'Restaurante A', localizado em 'Rua 1'. Ele tem uma excelente avalia\u00E7\u00E3o de 4.8 no Google e fica a aproximadamente 500 metros de dist\u00E2ncia. Est\u00E1 aberto agora e pronto para receb\u00EA-lo!", "idLocations": ["id1"]}'" \
2. Pergunta: "Qual o hor\u00E1rio de funcionamento do Restaurante B?" \
2.1 Lista de Entradas: \
"[ '{"id": "id1", "name": "Restaurante A", "address": "Rua 1", "rating": 4.8, "distance": 500, "opening_hours": "18:00 - 23:00"}', '{"id": "id2", "name": "Restaurante B", "address": "Rua 2", "rating": 4.5, "distance": 300, "opening_hours": "18:00 - 22:00"}', '{"id": "id3", "name": "Restaurante C", "address": "Rua 3", "rating": 4.3, "distance": 700, "opening_hours": "17:00 - 23:00"}']" \
2.3 Resposta: \
"'{ "answer": "O hor\u00E1rio de funcionamento do Restaurante B \u00E9 das 18:00 \u00E0s 22:00.", "idLocations": ["id2"]}'" \
#### Agora, analise a pergunta fornecida e a lista de locais, e retorne uma resposta no formato JSON descrito \
#### PERGUNTA {0} \
#### JSON/RESTAURANTES {1}


openai.generate.response.for.hotel=Voc\u00EA ser\u00E1 respons\u00E1vel por analisar perguntas feitas pelos usu\u00E1rios sobre hot\u00E9is e processar uma lista de locais fornecida para gerar uma resposta amig\u00E1vel e informativa. Sua resposta deve atender \u00E0s seguintes regras: \
#### Estrutura da Resposta: \
Sempre retorne a resposta no seguinte formato JSON: \
"'{  "answer": "Resposta gerada com base na pergunta e na lista recebida",  "idLocations": ["id1", "id2", "id3"]}'" \
#### Regras para Processar a Pergunta e os Locais: \
1. Se a pergunta incluir termos como 'melhor hotel pr\u00F3ximo' ou 'onde ficar perto de mim' ou algo que remete a isso: \
1.1 Considere avalia\u00E7\u00E3o e dist\u00E2ncia na classifica\u00E7\u00E3o dos hot\u00E9is. \
1.2 Retorne apenas um hotel (o melhor classificado). \
1.3 A resposta deve ser amig\u00E1vel e descrever o hotel escolhido, incluindo: \
1.3.1 Nome do hotel. \
1.3.2 Endere\u00E7o. \
1.3.3 Hor\u00E1rio de funcionamento (check-in e check-out). \
1.3.4 Avalia\u00E7\u00E3o no Google. \
1.3.5 Dist\u00E2ncia aproximada do usu\u00E1rio. \
1.3.6 Exemplo de JSON: \
"'{  "answer": "O melhor hotel para sua estadia perto de voc\u00EA \u00E9 'Hotel A', localizado em 'Endere\u00E7o'. Ele tem uma excelente avalia\u00E7\u00E3o de 4.8 no Google e fica a aproximadamente 500 metros de dist\u00E2ncia. Est\u00E1 dispon\u00EDvel para check-in a partir das 14h.",  "idLocations": ["id1"]}'" \
2. Se a pergunta incluir termos como 'quais os melhores hot\u00E9is pr\u00F3ximos' ou 'melhores op\u00E7\u00F5es de hospedagem perto de mim': \
2.1 Classifique os hot\u00E9is por avalia\u00E7\u00E3o e dist\u00E2ncia. \
2.2 Retorne no m\u00E1ximo 3 hot\u00E9is (se houver menos, retorne todos). \
2.3 A resposta deve listar os hot\u00E9is escolhidos com descri\u00E7\u00F5es amig\u00E1veis e formatadas. \
2.3.1 Destaque o nome dos hot\u00E9is (em negrito). \
2.3.2 Quando houver mais de um hotel na resposta, separe cada hotel com uma linha em branco para melhorar a legibilidade. \
2.4 Exemplo de JSON: \
"'{  "answer": "Aqui est\u00E3o os melhores hot\u00E9is pr\u00F3ximos a voc\u00EA:  \
\
- **Hotel A**: Localizado em 'Rua 1'. Avalia\u00E7\u00E3o: 4.8. Dist\u00E2ncia aproximada: 500 metros. Check-in a partir das 14:00 e check-out \u00E0s 12:00.  \
\
- **Hotel B**: Localizado em 'Rua 2'. Avalia\u00E7\u00E3o: 4.5. Dist\u00E2ncia aproximada: 300 metros. Check-in a partir das 15:00 e check-out \u00E0s 11:00.  \
\
- **Hotel C**: Localizado em 'Rua 3'. Avalia\u00E7\u00E3o: 4.3. Dist\u00E2ncia aproximada: 700 metros. Check-in a partir das 13:00 e check-out \u00E0s 12:00.",  "idLocations": ["id1", "id2", "id3"]}'" \
3. Se a pergunta incluir termos como 'melhores hot\u00E9is' (sem refer\u00EAncia \u00E0 proximidade): \
3.1 Classifique os hot\u00E9is apenas pela avalia\u00E7\u00E3o. \
3.2 Retorne no m\u00E1ximo 3 hot\u00E9is (se houver menos, retorne todos). \
3.3 A resposta deve listar os hot\u00E9is escolhidos com descri\u00E7\u00F5es amig\u00E1veis. \
3.4 Adicione uma linha em branco entre cada hotel listado para melhorar a legibilidade. \
3.5 Exemplo de JSON: \
"'{  "answer": "Aqui est\u00E3o os melhores hot\u00E9is para sua estadia:  \
\
1. **Hotel A**: Avalia\u00E7\u00E3o: 4.8. Check-in \u00E0s 14:00 e check-out \u00E0s 12:00.  \
\
2. **Hotel B**: Avalia\u00E7\u00E3o: 4.7. Check-in \u00E0s 15:00 e check-out \u00E0s 11:00.  \
\
3. **Hotel C**: Avalia\u00E7\u00E3o: 4.5. Check-in \u00E0s 13:00 e check-out \u00E0s 12:00.",  "idLocations": ["id1", "id2", "id3"]}'" \
4. Se nenhuma correspond\u00EAncia clara for encontrada na lista ou a pergunta for inv\u00E1lida: \
4.1 Retorne uma mensagem gen\u00E9rica amig\u00E1vel, sem IDs no JSON. \
4.2 Exemplo de JSON: \
"'{  "answer": "Desculpe, n\u00E3o consegui encontrar informa\u00E7\u00F5es sobre hot\u00E9is com base na sua pergunta. Por favor, forne\u00E7a mais detalhes.",  "idLocations": []}'" \
#### Regras para Processar a Lista de Locais: \
Cada local na lista fornecida ter\u00E1 as seguintes informa\u00E7\u00F5es: \
1. id: Identificador \u00FAnico do local. \
2. name: Nome do hotel. \
3. address: Endere\u00E7o. \
4. rating: Avalia\u00E7\u00E3o no Google (ex.: 4.5). \
5. distance: Dist\u00E2ncia aproximada em metros do usu\u00E1rio. \
6. check_in: Hor\u00E1rio de check-in. \
7. check_out: Hor\u00E1rio de check-out. \
Use essas informa\u00E7\u00F5es para gerar respostas que sejam claras e envolventes, sempre considerando as regras descritas. \
#### Formato de Resposta: \
1. Retorne apenas o JSON, sem qualquer texto adicional antes ou depois dele. \
2. N\u00E3o inclua formata\u00E7\u00E3o como ```json ou qualquer outro marcador ao redor do JSON. \
3. Certifique-se de que o JSON seja bem formatado e v\u00E1lido. \
#### Exemplo de entrada e sa\u00EDda: \
1. Pergunta: "Quais os melhores hot\u00E9is pr\u00F3ximos?" \
1.1 Lista de Entrada: \
"[  '{"id": "id1", "name": "Hotel A", "address": "Rua 1", "rating": 4.8, "distance": 500, "check_in": "14:00", "check_out": "12:00"}',  '{"id": "id2", "name": "Hotel B", "address": "Rua 2", "rating": 4.5, "distance": 300, "check_in": "15:00", "check_out": "11:00"}',  '{"id": "id3", "name": "Hotel C", "address": "Rua 3", "rating": 4.3, "distance": 700, "check_in": "13:00", "check_out": "12:00"}']" \
1.2 Resposta: \
"'{  "answer": "Aqui est\u00E3o os melhores hot\u00E9is pr\u00F3ximos a voc\u00EA:  \
"linha em branco" \
- **Hotel A**: Localizado em 'Rua 1'. Avalia\u00E7\u00E3o: 4.8. Dist\u00E2ncia aproximada: 500 metros. Check-in a partir das 14:00 e check-out \u00E0s 12:00.  \
"linha em branco" \
- **Hotel B**: Localizado em 'Rua 2'. Avalia\u00E7\u00E3o: 4.5. Dist\u00E2ncia aproximada: 300 metros. Check-in a partir das 15:00 e check-out \u00E0s 11:00.  \
"linha em branco" \
- **Hotel C**: Localizado em 'Rua 3'. Avalia\u00E7\u00E3o: 4.3. Dist\u00E2ncia aproximada: 700 metros. Check-in a partir das 13:00 e check-out \u00E0s 12:00.",  "idLocations": ["id1", "id2", "id3"]}'" \
Agora, analise a pergunta fornecida e a lista de locais, e retorne uma resposta no formato JSON descrito. \
#### PERGUNTA: {0} \
#### JSON/HOTEIS: {1}


openai.generate.response.for.tourist.attraction=Voc\u00EA ser\u00E1 respons\u00E1vel por analisar perguntas feitas pelos usu\u00E1rios sobre Pontos Tur\u00EDsticos e processar uma lista de locais fornecida para gerar uma resposta amig\u00E1vel e informativa. Sua resposta deve atender \u00E0s seguintes regras: \
#### Estrutura da Resposta: \
Sempre retorne a resposta no seguinte formato JSON: \
"'{  "answer": "Resposta gerada com base na pergunta e na lista recebida",  "idLocations": ["id1", "id2", "id3"]}'" \
#### Regras para Processar a Pergunta e os Locais: \
1. Se a pergunta incluir termos como 'melhor Ponto Tur\u00EDstico pr\u00F3ximo' ou 'onde visitar perto de mim': \
1.1 Considere avalia\u00E7\u00E3o e dist\u00E2ncia na classifica\u00E7\u00E3o dos Pontos Tur\u00EDsticos. \
1.2 Retorne apenas um Ponto Tur\u00EDstico (o melhor classificado). \
1.3 A resposta deve ser amig\u00E1vel e descrever o Ponto Tur\u00EDstico escolhido, incluindo: \
1.3.1 Nome do Ponto Tur\u00EDstico. \
1.3.2 Endere\u00E7o. \
1.3.3 Hor\u00E1rio de funcionamento. \
1.3.4 Avalia\u00E7\u00E3o no Google. \
1.3.5 Dist\u00E2ncia aproximada do usu\u00E1rio. \
1.4  Exemplo de JSON: \
"'{  "answer": "O melhor Ponto Tur\u00EDstico para visitar perto de voc\u00EA \u00E9 'Ponto Tur\u00EDstico A', localizado em 'Endere\u00E7o'. Ele tem uma excelente avalia\u00E7\u00E3o de 4.8 no Google e fica a aproximadamente 500 metros de dist\u00E2ncia. Est\u00E1 aberto agora e pronto para sua visita!",  "idLocations": ["id1"]}'" \
2. Se a pergunta incluir termos como 'quais os melhores Pontos Tur\u00EDsticos pr\u00F3ximos' ou 'melhores op\u00E7\u00F5es culturais perto de mim': \
2.1 Classifique os Pontos Tur\u00EDsticos por avalia\u00E7\u00E3o e dist\u00E2ncia. \
2.2 Retorne no m\u00E1ximo 3 Pontos Tur\u00EDsticos (se houver menos, retorne todos). \
2.3 A resposta deve listar os Pontos Tur\u00EDsticos escolhidos com descri\u00E7\u00F5es amig\u00E1veis e formatadas. \
2.3.1 Destaque o nome dos Pontos Tur\u00EDsticos (em negrito). \
2.3.2 Separe cada Ponto Tur\u00EDstico com uma linha em branco, criando um espa\u00E7o visual claro entre eles. \
2.4 Exemplo de JSON:  \
"'{  "answer": "Aqui est\u00E3o os melhores Pontos Tur\u00EDsticos pr\u00F3ximos a voc\u00EA: \
- **Ponto Tur\u00EDstico A**: Localizado em 'Rua 1'. Avalia\u00E7\u00E3o: 4.8. Dist\u00E2ncia aproximada: 500 metros. \
\
- **Ponto Tur\u00EDstico B**: Localizado em 'Rua 2'. Avalia\u00E7\u00E3o: 4.5. Dist\u00E2ncia aproximada: 300 metros. \
\
- **Ponto Tur\u00EDstico C**: Localizado em 'Rua 3'. Avalia\u00E7\u00E3o: 4.3. Dist\u00E2ncia aproximada: 700 metros.",  "idLocations": ["id1", "id2", "id3"]}'" \
3. Se a pergunta incluir termos como 'melhores Pontos Tur\u00EDsticos' (sem refer\u00EAncia \u00E0 proximidade): \
3.1 Classifique os Pontos Tur\u00EDsticos apenas pela avalia\u00E7\u00E3o. \
3.2 Retorne no m\u00E1ximo 3 Pontos Tur\u00EDsticos (se houver menos, retorne todos). \
3.3 A resposta deve listar os Pontos Tur\u00EDsticos escolhidos com descri\u00E7\u00F5es amig\u00E1veis. \
3.4 Exemplo de JSON:  \
"'{  "answer": "Aqui est\u00E3o os melhores Pontos Tur\u00EDsticos para explorar: \
- **Ponto Tur\u00EDstico A**: Avalia\u00E7\u00E3o: 4.8. \
\
- **Ponto Tur\u00EDstico B**: Avalia\u00E7\u00E3o: 4.7. \
\
- **Ponto Tur\u00EDstico C**: Avalia\u00E7\u00E3o: 4.5.",  "idLocations": ["id1", "id2", "id3"]}'" \
4. Se nenhuma correspond\u00EAncia clara for encontrada na lista ou a pergunta for inv\u00E1lida: \
4.1 Retorne uma mensagem gen\u00E9rica amig\u00E1vel, sem IDs no JSON. \
4.2 Exemplo de JSON:  \
"'{  "answer": "Desculpe, n\u00E3o consegui encontrar informa\u00E7\u00F5es sobre Pontos Tur\u00EDsticos com base na sua pergunta. Por favor, forne\u00E7a mais detalhes.",  "idLocations": []}'" \
#### Regras para Processar a Lista de Locais: \
1. id: Identificador \u00FAnico do local. \
2. name: Nome do Ponto Tur\u00EDstico. \
3. address: Endere\u00E7o. \
4. rating: Avalia\u00E7\u00E3o no Google (ex.: 4.5). \
5. distance: Dist\u00E2ncia aproximada em metros do usu\u00E1rio. \
6. opening_hours: Hor\u00E1rio de funcionamento. \
Use essas informa\u00E7\u00F5es para gerar respostas que sejam claras e envolventes, sempre considerando as regras descritas. \
#### Formato de Resposta: \
1. Retorne apenas o JSON, sem qualquer texto adicional antes ou depois dele. \
2. N\u00E3o inclua formata\u00E7\u00E3o como ```json ou qualquer outro marcador ao redor do JSON. \
3. Certifique-se de que o JSON seja bem formatado e v\u00E1lido. \
#### Exemplo de Entrada e Sa\u00EDda: \
1. Pergunta: "Quais os melhores Pontos Tur\u00EDsticos pr\u00F3ximos?" \
1.1 Lista de Entradas: \
"[  '{"id": "id1", "name": "Ponto Tur\u00EDstico A", "address": "Rua 1", "rating": 4.8, "distance": 500, "opening_hours": "09:00 - 18:00"}',  '{"id": "id2", "name": "Ponto Tur\u00EDstico B", "address": "Rua 2", "rating": 4.5, "distance": 300, "opening_hours": "10:00 - 17:00"}',  '{"id": "id3", "name": "Ponto Tur\u00EDstico C", "address": "Rua 3", "rating": 4.3, "distance": 700, "opening_hours": "08:00 - 19:00"}']" \
1.2 Resposta:  \
"'{  "answer": "Aqui est\u00E3o os melhores Pontos Tur\u00EDsticos pr\u00F3ximos a voc\u00EA: \
- **Ponto Tur\u00EDstico A**: Localizado em 'Rua 1'. Avalia\u00E7\u00E3o: 4.8. Dist\u00E2ncia aproximada: 500 metros. \
\
- **Ponto Tur\u00EDstico B**: Localizado em 'Rua 2'. Avalia\u00E7\u00E3o: 4.5. Dist\u00E2ncia aproximada: 300 metros. \
\
- **Ponto Tur\u00EDstico C**: Localizado em 'Rua 3'. Avalia\u00E7\u00E3o: 4.3. Dist\u00E2ncia aproximada: 700 metros.",  "idLocations": ["id1", "id2", "id3"]}'" \
Agora, analise a pergunta fornecida e a lista de locais, e retorne uma resposta no formato JSON descrito \
#### PERGUNTA {0} \
#### JSON/PONTOS TURISTICOS: {1}

openai.generate.response.for.locations=Voc\u00EA ser\u00E1 respons\u00E1vel por analisar perguntas feitas pelos usu\u00E1rios sobre locais diversos (restaurantes, hot\u00E9is, pontos tur\u00EDsticos, entre outros) e processar uma lista fornecida para gerar uma resposta amig\u00E1vel e informativa. Sua resposta deve atender \u00E0s seguintes regras: \
#### Estrutura da Resposta: \
Sempre retorne a resposta no seguinte formato JSON: \
"'{ "answer": "Resposta gerada com base na pergunta e na lista recebida", "idLocations": ["id1", "id2", "id3"] }'" \
#### Regras para Processar a Pergunta e os Locais: \
1. Identifique o tipo de pergunta feita pelo usu\u00E1rio: \
1.1. **Perguntas diretas sobre um local espec\u00EDfico (endere\u00E7o, hor\u00E1rio de funcionamento, dist\u00E2ncia, hist\u00F3ria, etc.):** \
1.1.1 Procure o local correspondente na lista pelo nome ou outra refer\u00EAncia direta. \
1.1.2 Responda apenas com a informa\u00E7\u00E3o solicitada, sem incluir dados adicionais desnecess\u00E1rios. \
1.1.3 Estruture a resposta de forma objetiva, mas amig\u00E1vel. \
1.1.4 Exemplo de perguntas e respostas: \
- Pergunta: "Qual o endere\u00E7o do Restaurante A?" \
Resposta: "'{ "answer": "O endere\u00E7o do Restaurante A \u00E9 'Rua 1'.", "idLocations": ["id1"] }'" \
- Pergunta: "Qual o hor\u00E1rio de funcionamento do Restaurante B?" \
Resposta: "'{ "answer": "O hor\u00E1rio de funcionamento do Restaurante B \u00E9 das 18:00 \u00E0s 23:00.", "idLocations": ["id2"] }'" \
- Pergunta: "Qual a hist\u00F3ria do Ponto Tur\u00EDstico A?" \
Resposta: "'{ "answer": "O Ponto Tur\u00EDstico A foi constru\u00EDdo em 1850 e \u00E9 conhecido por sua arquitetura \u00FAnica e import\u00E2ncia hist\u00F3rica na regi\u00E3o.", "idLocations": ["id1"] }'" \
1.2. **Perguntas gerais (melhores locais pr\u00F3ximos, melhores op\u00E7\u00F5es, etc.):** \
1.2.1 Siga as regras de classifica\u00E7\u00E3o por avalia\u00E7\u00E3o e dist\u00E2ncia. \
1.2.2 Formate a resposta para que, ao mencionar mais de um local, cada local seja listado em uma nova linha, separado por um espa\u00E7o em branco. \
1.2.3 Exemplo de resposta formatada com m\u00FAltiplos locais: \
"'{ "answer": "Aqui est\u00E3o os melhores locais pr\u00F3ximos a voc\u00EA: \
- **Local A**: Localizado em 'Rua 1'. Avalia\u00E7\u00E3o: 4.8. Dist\u00E2ncia aproximada: 500 metros. \
\
- **Local B**: Localizado em 'Rua 2'. Avalia\u00E7\u00E3o: 4.5. Dist\u00E2ncia aproximada: 300 metros. \
\
- **Local C**: Localizado em 'Rua 3'. Avalia\u00E7\u00E3o: 4.3. Dist\u00E2ncia aproximada: 700 metros.", "idLocations": ["id1", "id2", "id3"] }'" \
1.3. **Perguntas inv\u00E1lidas ou mal formuladas:** \
1.3.1 Retorne uma mensagem gen\u00E9rica amig\u00E1vel solicitando mais detalhes. \
1.3.2 Exemplo: \
"'{ "answer": "Desculpe, n\u00E3o consegui entender sua pergunta. Por favor, forne\u00E7a mais detalhes para que eu possa ajudar.", "idLocations": [] }'" \
#### Regras para Processar a Lista de Locais: \
Cada local na lista fornecida ter\u00E1 as seguintes informa\u00E7\u00F5es: \
1. id: Identificador \u00FAnico do local. \
2. name: Nome do local. \
3. address: Endere\u00E7o. \
4. rating: Avalia\u00E7\u00E3o no Google (ex.: 4.5). \
5. distance: Dist\u00E2ncia aproximada em metros do usu\u00E1rio. \
6. opening_hours: Hor\u00E1rio de funcionamento. \
7. history: Breve descri\u00E7\u00E3o hist\u00F3rica ou informa\u00E7\u00F5es contextuais (se fornecidas). \
Use essas informa\u00E7\u00F5es para responder de maneira precisa e clara. \
#### Formato de Resposta: \
1. Retorne apenas o JSON, sem qualquer texto adicional antes ou depois dele. \
2. N\u00E3o inclua formata\u00E7\u00E3o como ```json ou qualquer outro marcador ao redor do JSON. \
3. Certifique-se de que o JSON seja bem formatado e v\u00E1lido. \
#### Exemplo de Entrada e Sa\u00EDda: \
1. Pergunta: "Quais os melhores locais pr\u00F3ximos?" \
1.1 Lista de Entrada: \
"[ '{"id": "id1", "name": "Local A", "address": "Rua 1", "rating": 4.8, "distance": 500, "opening_hours": "08:00 - 18:00"}', '{"id": "id2", "name": "Local B", "address": "Rua 2", "rating": 4.5, "distance": 300, "opening_hours": "09:00 - 19:00"}', '{"id": "id3", "name": "Local C", "address": "Rua 3", "rating": 4.3, "distance": 700, "opening_hours": "10:00 - 20:00"}']" \
1.2 Resposta: \
"'{ "answer": "Aqui est\u00E3o os melhores locais pr\u00F3ximos a voc\u00EA: \
- **Local A**: Localizado em 'Rua 1'. Avalia\u00E7\u00E3o: 4.8. Dist\u00E2ncia aproximada: 500 metros. \
\
- **Local B**: Localizado em 'Rua 2'. Avalia\u00E7\u00E3o: 4.5. Dist\u00E2ncia aproximada: 300 metros. \
\
- **Local C**: Localizado em 'Rua 3'. Avalia\u00E7\u00E3o: 4.3. Dist\u00E2ncia aproximada: 700 metros.", "idLocations": ["id1", "id2", "id3"] }'" \
#### Agora, analise a pergunta fornecida e a lista de locais, e retorne uma resposta no formato JSON descrito. \
#### PERGUNTA: {0} \
#### JSON/LOCAIS: {1}


openai.generate.location.short.description.prompt=###Voc\u00EA receber\u00E1 o nome de um ponto tur\u00EDstico. \
  Sua tarefa \u00E9 gerar um texto de apresenta\u00E7\u00E3o dese local para o usu\u00E1rio.  \
  Considere as seguintes restri\u00E7\u00F5es: \
  1. O objetivo do texto \u00E9 apenas apresentar os nomes em uma linguagem mais humana. \
  2. O texto deve conter apenas o nome dos locais e mais algums poucas palavras que o torne apresentativo e convidativo para visita\u00E7\u00E3o em uma linguagem mais humana.  \
  3. O texto deve ser ideal para leitura de no m\u00E1ximo 30 segundos. \
  ### Exemplo: \
  1. Exemplo de Local recebido: 'Cristo Redentor' \
  2. Exemplo de Resposta: Pr\u00F3ximo a voc\u00EA est\u00E1 o Cristo Redentor, um dos pontos tur\u00EDsticos mais famosos do Rio de Janeiro. Venha conhecer mais de perto esse cart\u00E3o postal da cidade carioca. \
  ### PONTO TURISTICO: {0}

openai.generate.locations.short.description.prompt=### Voc\u00EA receber\u00E1 uma lista de pontos tur\u00EDsticos em formato JSON. \
Sua tarefa \u00E9 gerar um texto de apresenta\u00E7\u00E3o desses locais para o usu\u00E1rio de forma clara e envolvente. \
Considere as seguintes diretrizes: \
1. O texto deve come\u00E7ar com a frase: "Pr\u00F3ximo a voc\u00EA est\u00E3o alguns dos pontos tur\u00EDsticos mais admir\u00E1veis da cidade. Quer saber mais sobre pontos tur\u00EDsticos, hot\u00E9is ou restaurantes? Fa\u00E7a uma pergunta e ficarei feliz em ajud\u00E1-lo." \
2. O objetivo do texto \u00E9 apresentar os nomes dos pontos tur\u00EDsticos em uma linguagem natural e amig\u00E1vel, sem se aprofundar em detalhes. \
3. O texto deve ser breve, ideal para leitura em at\u00E9 30 segundos. \
4. Regras para lidar com a lista de pontos tur\u00EDsticos: \
   4.1. **Se n\u00E3o houver pontos tur\u00EDsticos na lista:** Retorne a mensagem: "N\u00E3o h\u00E1 pontos tur\u00EDsticos pr\u00F3ximos a voc\u00EA no momento." \
   4.2. **Se houver pontos tur\u00EDsticos na lista:** Retorne o texto no seguinte formato: \
        - Inicie com: "Pr\u00F3ximo a voc\u00EA est\u00E3o alguns dos principais pontos tur\u00EDsticos da cidade." \
        - Liste os nomes dos pontos tur\u00EDsticos em uma frase fluida e natural, conectando-os com v\u00EDrgulas e usando "e" antes do \u00FAltimo nome. \
        - Finalize com: "Quer saber mais sobre pontos tur\u00EDsticos, hot\u00E9is ou restaurantes? Fa\u00E7a uma pergunta e ficarei feliz em ajud\u00E1-lo." \
5. Certifique-se de que o texto seja envolvente, amig\u00E1vel e f\u00E1cil de entender. \
### Exemplo de Entrada e Sa\u00EDda: \
- Entrada (JSON com pontos tur\u00EDsticos): \
  '[{"name": "Pra\u00E7a Central"}, {"name": "Museu Hist\u00F3rico"}, {"name": "Parque das Flores"}]' \
- Sa\u00EDda: \
  "Pr\u00F3ximo a voc\u00EA est\u00E3o alguns dos principais pontos tur\u00EDsticos da cidade: Pra\u00E7a Central, Museu Hist\u00F3rico e Parque das Flores. Quer saber mais sobre pontos tur\u00EDsticos, hot\u00E9is ou restaurantes? Fa\u00E7a uma pergunta e ficarei feliz em ajud\u00E1-lo." \
- Entrada (JSON vazio ou sem pontos tur\u00EDsticos): \
  '[]' \
- Sa\u00EDda: \
  "N\u00E3o h\u00E1 pontos tur\u00EDsticos pr\u00F3ximos a voc\u00EA no momento." \
### JSON: {0}

openai.find.location.name=Dado o JSON a seguir encontre o t\u00EDtulo correto do/da {0}.\
  #### ORIENTA\u00C7\u00D5ES: \
  1. Se encontrar, retornar apneas o t\u00EDtulo exato.\
  2. Se n\u00E3o encontrar, reponda apenas com a palavra chave "NOT_FOUND"\
  #### JSON: {1}

## Wikipedia API
wikipedia.service.name=Integra\u00E7\u00E3o Wikipedia
wikipedia.title.not.found=Nenhum artigo encontrado para o t\u00EDtulo ''{0}''.
wikipedia.search.title.error=Erro ao buscar artigo para o t\u00EDtulo ''{0}''.

##Error
json.err.convert.object.to.string=An error was occurred on process Object to JSON String. Details: {0}
json.err.convert.string.to.object=An error was occurred on process JSON String to Object of type ''{0}''.

##Integrations
integrations.request=Request: {0}
integrations.response=Response: {0}
integrations.error.consumer.service=Falha ao processar requisi\u00E7\u00E3o do servi\u00E7o ''{0}''. Foi(ram) realizada(s) {1} tentativa(s) de {2}. Detalhes: {3}
integrations.error.consumer.service.exit=Falha ao processar requisi\u00E7\u00E3o do servi\u00E7o ''{0}''. Foi(ram) realizada(s) {1} tentativa(s) de {2}.

## Scraping Service
scraping.service.name=Scraping Service

## Places Services
google.places.service.name=Google Places Service

## Speech to Text Service
speechtotext.service.name=Speech To Text

## Text to Speech
texttospeech.service.name=Text To Speech

## Geocode
geocode.service.name=Google Geocode