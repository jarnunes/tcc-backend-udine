
## Questions
question.service.name=Question Service
questions.locations.prompt=Você receberá uma lista de pontos turísticos próximos ao usuário (em formato JSON),  obtidos a partir da API do google maps. \
  Além disso, também receberá uma pergunta e sua tarefa é gerar uma resposta objetiva e factual com base nos pontos turísticos recebidos e seu \
  conhecimento geral sobre cada um dos pontos turísticos da lista. \
  #### RESTRIÇÕES: \
  1. Se for enviada uma pergunta inválida, você deve responder: "Desculpe, mas sua pergunta não está clara. Por favor, forneça mais detalhes ou faça uma nova pergunta. \
  2. Se for enviada uma não relacionada a algum dos pontos turísticos, você deve responder: Desculpe, mas sua pergunta não está relacionada a nenhum dos pontos turísticos\
     próximos a você. Aqui estão os pontos turísticos próximos: "COMANDO: AQUI VOCÊ DEVE LISTAR EM UM ENUMERADO FORMATADO COM QUEBRA DE LINHA OS PONTOS TURÍSTICOS PRÓXIMOS AO USUÁRIO" \
  3. Se JSON estiver nulo, você responderá: Desculpe, mas no momento não tenho informações suficientes para responder qualquer pergunta sobre o ponto turístico em questão. \
  4. Se no JSON o campo "name" não relação com o campo "wikipediaDescription", pode desconsiderar a descrição do "wikipediaDescription", pois ela é inválida. \
  5. Se o campo "wikipediaDescription" for inválido ou nulo, você deverá gerar uma resposta considerando apenas o conhecimento do próprio chat GPT sobre o ponto turístico \
  #### JSON COM INFORMAÇÕES GERAIS: {0} \
  #### PERGUNTA: {1}

questions.identify.question.type=Você receberá um ARRAY de pontos turísticos próximos do usuário, além de uma 'Pergunta'. Sua tarefa é determinar \
  se a pergunta tem relação com algum(s) do(s) ponto(s) turísticos da lista. \
  #### RESTRIÇÕES: \
  1. A resposta deve ser um Array com o identificador dos pontos turísticos relacionados à pergunta. \
  2. Se a pergunta não tiver relação com os pontos turísticos, retorne um Array vazio. Exemplo: [] \
  3. Se a pergunta tive relação com todos os pontos turísticos ou for uma pergunta genérica que não especifique o nome dos pontos turísticos, retorne um array com todos os pontos turísticos. \
  #### PONTOS TURISTICOS: {0} \
  #### PERGUNTA: {1}

questions.identify.locations.type.based.on.question=Você receberá um ARRAY de tipos de locais do Google Maps, além de uma 'Pergunta'. Sua tarefa é determinar \
  a quais tipos dos locais a pergunta está relacionada e retornar um array como resposta. \
  #### RESTRIÇÕES: \
  1. A resposta deve ser um Array com o identificador dos tipos relacionados à pergunta. \
  2. Se a pergunta não tiver relação com os tipos, retorne um Array vazio. Exemplo: [] \
  3. Se não for possível deduzir os tipos com base na pergunta, retornar o array com todos os tipos recebidos.
  #### EXEMPLO: \
  1. Pergunta Recebida: Qual o melhor local para comer uma pizza com a família? \
  2. Array Recebido: ["restaurant", "museum", "food", "lodging", "bar"] \
  3. Array de resposta: ["restaurant", "food"] \
  #### ARRAY: {0} \
  #### PERGUNTA: {1}

questions.nearby.location.not.found=Não foi possível encontrar um local próximo a você relacionado a pergunta enviada. Tente novamente.
questions.error.converts.openai.response.to.list=Erro ao converter resposta do openai para lista de strings

## Open AI
openai.service.name=OpenAI Service
openai.generate.location.short.description.prompt=###Você receberá o nome de um ponto turístico. \
  Sua tarefa é gerar um texto de apresentação dese local para o usuário.  \
  Considere as seguintes restrições: \
  1. O objetivo do texto é apenas apresentar os nomes em uma linguagem mais humana. \
  2. O texto deve conter apenas o nome dos locais e mais algums poucas palavras que o torne apresentativo e convidativo para visitação em uma linguagem mais humana.  \
  3. O texto deve ser ideal para leitura de no máximo 30 segundos. \
  ### Exemplo: \
  1. Exemplo de Local recebido: 'Cristo Redentor' \
  2. Exemplo de Resposta: Próximo a você está o Cristo Redentor, um dos pontos turísticos mais famosos do Rio de Janeiro. Venha conhecer mais de perto esse cartão postal da cidade carioca. \
  ### PONTO TURISTICO: {0}

openai.generate.locations.short.description.prompt=###Você receberá uma lista de pontos turísticos em formato JSON. \
  Sua tarefa é gerar um texto de apresentação desses locais para o usuário.  \
  Considere as seguintes restrições: \
  1. O texto deve começar com a frase: Próximo a você estão alguns dos pontos turísticos mais admiráveis da cidade. Quer saber mais? Quer saber mais sobre pontos turísticos, hoteis ou restaurantes? Faça uma pergunta e ficarei feliz em ajudá-lo. \
  2. O objetivo do texto é apenas apresentar os nomes em uma linguagem mais humana. \
  3. O texto deve ser ideal para leitura de no máximo 30 segundos. \
  ### Exemplo: \
  1. Exemplo de Locais recebidos: ["Cristo Redentor", "Cobapacabana"] \
  2. Exemplo de Resposta: Próximo a você estão alguns dos principais pontos turísticos da cidade. Quer saber mais? Seja sobre pontos turísticos, hoteis ou restaurantes, faça uma pergunta e ficarei feliz em ajudá-lo. \
  ### JSON: {0}

openai.find.location.name=Dado o JSON a seguir encontre o título correto do/da {0}.\
  #### ORIENTAÇÕES: \
  1. Se encontrar, retornar apneas o título exato.\
  2. Se não encontrar, reponda apenas com a palavra chave "NOT_FOUND"\
  #### JSON: {1}

## Wikipedia API
wikipedia.service.name=Integração Wikipedia
wikipedia.title.not.found=Nenhum artigo encontrado para o título ''{0}''.
wikipedia.search.title.error=Erro ao buscar artigo para o título ''{0}''.

##Error
json.err.convert.object.to.string=An error was occurred on process Object to JSON String. Details: {0}
json.err.convert.string.to.object=An error was occurred on process JSON String to Object of type ''{0}''.

##Integrations
integrations.request=Request: {0}
integrations.response=Response: {0}
integrations.error.consumer.service=Falha ao processar requisição do serviço ''{0}''. Foi(ram) realizada(s) {1} tentativa(s) de {2}. Detalhes: {3}
integrations.error.consumer.service.exit=Falha ao processar requisição do serviço ''{0}''. Foi(ram) realizada(s) {1} tentativa(s) de {2}.

## Scraping Service
scraping.service.name=Scraping Service

## Places Services
google.places.service.name=Google Places Service

## Speech to Text Service
speechtotext.service.name=Speech To Text

## Text to Speech
texttospeech.service.name=Text To Speech

## Geocode
geocode.service.name=Google Geocode